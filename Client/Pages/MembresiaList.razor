@page "/membresia/list"
@using GimnasioApp.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
<style>
    .colorEditar {
        color: blue; 
    }
    .colorEliminar
    {
        color: red;
    }
</style>



<h3>Membresia</h3>
<MatButtonLink Href="membresia/crear" Raised="true" Icon="add_circle">Nuevo</MatButtonLink>

@if(_membresia==null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <MatTable Items="@_membresia" class="mat-elevation-z5">
        <MatTableHeader>
            
            <th>Id</th>
            <th>Descripción</th>
            <th>Precio</th>
            <th>Observación</th>
            <th>Acciones</th>
            <th></th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.Id</td>
            <td>@context.Descripcion</td>
            <td>@string.Format("S/.{0:f2}", @context.PrecioMembresia)</td>
            <td>@context.Observacion</td>
            <td><MatIconButton Icon="edit" Class="colorEditar" @onclick="()=>Editar(context.Id)"></MatIconButton>
                <MatIconButton Icon="delete" Class="colorEliminar" @onclick="()=>Eliminar(context.Id)"></MatIconButton>
            </td>
            
            
        </MatTableRow>
        
    </MatTable>




    @* <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Observación</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in _membresia)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Descripcion</td>
                    <td>@item.PrecioMembresia</td>
                    <td>@item.Observacion</td>
                </tr>
            }
        </tbody>
    </table> *@
    

     
    
}


@code {
    private MembresiaDto[]? _membresia;
    protected override async Task OnInitializedAsync()
    {
        await Cargar();
    }
    private async Task Cargar()
    {
        _membresia = await Http.GetFromJsonAsync<MembresiaDto[]>("api/membresia");
    }
    private void Editar(int id)
    {
        NavigationManager.NavigateTo($"membresia/editar/{id}");
    }
    private async void Eliminar(int id)
    {
        await Http.DeleteAsync($"api/membresia/{id}");
        await Cargar();
    }

   
}
